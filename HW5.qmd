---
title: "Homework 5: Namit Shrivastava"
format: pdf
editor: visual
---

## 1. The following is the distribution of occupied housing units and blocks for two counties in  Michigan.  A stratified PPeS sample of n = 3000 housing units in a = 100 blocks with  minimum sufficient size b* per block is to be selected across the counties. The counties and the subdivisions within each county of river and non-river blocks serve as four (4) strata.

## a) Allocate the sample blocks across the four strata proportionate to occupied housing units. How have you handled rounding of sample blocks?

The proportionate allocation formula is:

$$n_h = a \times \frac{N_h}{N}$$

Where:

$n_h$ is the number of sample blocks allocated to stratum $h$
$a = 100$ is the total number of sample blocks to be selected
$N_h$ is the number of occupied housing units in stratum $h$
$N = 300,000$ is the total number of occupied housing units

Calculating for each stratum:

$$n_1 = 100 \times \frac{25,000}{300,000} = 100 \times 0.0833 = 8.33$$

$$n_2 = 100 \times \frac{175,000}{300,000} = 100 \times 0.5833 = 58.33$$

$$n_3 = 100 \times \frac{20,000}{300,000} = 100 \times 0.0667 = 6.67$$

$$n_4 = 100 \times \frac{80,000}{300,000} = 100 \times 0.2667 = 26.67$$

When I round to whole numbers:

Stratum 1: 8.33 -> 8
Stratum 2: 58.33 -> 58
Stratum 3: 6.67 -> 7
Stratum 4: 26.67 -> 27
Checking the sum: 8 + 58 + 7 + 27 = 100, which equals our target.

In this case, standard rounding worked perfectly to give us exactly 100 blocks. If the sum after rounding had not equaled 100, I would have adjusted the allocations by:

* Identifying the strata with the largest (or smallest) fractional parts

* Adding (or subtracting) blocks to/from these strata until the total reached 100

```{r}
# Defining data for strata
strata_data <- data.frame(
    stratum = c("County1_River", "County1_NonRiver", "County2_River", "County2_NonRiver"),
    occupied_units = c(5000, 3000, 4000, 2000)
)

# Total number of sample blocks
total_sample_blocks <- 100

# Calculating total occupied housing units
total_occupied <- sum(strata_data$occupied_units)

# Calculating initial allocation
strata_data$initial_allocation <- (strata_data$occupied_units / total_occupied) * total_sample_blocks

# Rounding allocations to nearest integer
strata_data$rounded_allocation <- round(strata_data$initial_allocation)

# Checking if sum matches total sample blocks
sum_allocations <- sum(strata_data$rounded_allocation)

if (sum_allocations != total_sample_blocks) {
    cat("Adjustments needed: Sum =", sum_allocations, "\n")
    # Adjusting based on fractional parts
    fractional_parts <- strata_data$initial_allocation - floor(strata_data$initial_allocation)
    difference <- total_sample_blocks - sum_allocations
    
    if (difference > 0) {
        order_fractional <- order(fractional_parts, decreasing = TRUE)
        for (i in seq_len(difference)) {
            strata_data$rounded_allocation[order_fractional[i]] <- strata_data$rounded_allocation[order_fractional[i]] + 1
        }
    } else if (difference < 0) {
        order_fractional <- order(fractional_parts, decreasing = FALSE)
        for (i in seq_len(abs(difference))) {
            strata_data$rounded_allocation[order_fractional[i]] <- strata_data$rounded_allocation[order_fractional[i]] - 1
        }
    }
}
```
```{r}
print(strata_data)
```

Looking at my results of the proportionate allocation, I found that County1_River should receive 36 sample blocks, representing its 5,000 occupied housing units (about 36% of the total).

County1_NonRiver gets 21 blocks for its 3,000 housing units (21% of total), while County2_River receives 29 blocks for its 4,000 housing units (29% of total). 

Finally, County2_NonRiver is allocated 14 blocks based on its 2,000 housing units (14% of total). I rounded the initial allocations to the nearest integer, which worked out perfectly as the sum equals exactly 100 blocks. 

So this allocation ensures that each stratum is represented proportionally to its share of occupied housing units, which maintains the representativeness of my sample while allowing for stratified analysis. If the rounded values hadn't summed to 100, my code was prepared to make adjustments based on the fractional parts of the initial allocations.