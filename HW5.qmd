---
title: "Homework 5: Namit Shrivastava"
format: pdf
editor: visual
---

## 1. The following is the distribution of occupied housing units and blocks for two counties in  Michigan.  A stratified PPeS sample of n = 3000 housing units in a = 100 blocks with  minimum sufficient size b* per block is to be selected across the counties. The counties and the subdivisions within each county of river and non-river blocks serve as four (4) strata.

## a) Allocate the sample blocks across the four strata proportionate to occupied housing units. How have you handled rounding of sample blocks?

The proportionate allocation formula is:

$$n_h = a \times \frac{N_h}{N}$$

Where:

$n_h$ is the number of sample blocks allocated to stratum $h$
$a = 100$ is the total number of sample blocks to be selected
$N_h$ is the number of occupied housing units in stratum $h$
$N$ is the total number of occupied housing units
For each stratum:

$$n_1 = 100 \times \frac{8,521}{131,788} = 100 \times 0.0647 = 6.47$$

$$n_2 = 100 \times \frac{28,744}{131,788} = 100 \times 0.2181 = 21.81$$

$$n_3 = 100 \times \frac{17,224}{131,788} = 100 \times 0.1307 = 13.07$$

$$n_4 = 100 \times \frac{77,299}{131,788} = 100 \times 0.5866 = 58.66$$

Rounding to whole numbers:

Allegan_River: 6.47 -> 6
Allegan_NonRiver: 21.81 -> 22
Kalamazoo_River: 13.07 -> 13
Kalamazoo_NonRiver: 58.66 -> 59
The sum is 6 + 22 + 13 + 59 = 100, which equals our target.


So the R code for this is:

```{r}
# Creating data frame for the four strata
strata_data <- data.frame(
  stratum = c("Allegan_River", "Allegan_NonRiver", "Kalamazoo_River", "Kalamazoo_NonRiver"),
  occupied_units = c(8521, 37265-8521, 17224, 94523-17224),
  blocks = c(940, 3593-940, 1318, 4494-1318)
)

# Calculating total number of occupied housing units
strata_data$nonriver_units <- c(37265-8521, 0, 94523-17224, 0)
strata_data$occupied_units <- c(8521, 37265-8521, 17224, 94523-17224)

strata_data <- data.frame(
  stratum = c("Allegan_River", "Allegan_NonRiver", "Kalamazoo_River", "Kalamazoo_NonRiver"),
  occupied_units = c(8521, 37265-8521, 17224, 94523-17224),
  blocks = c(940, 3593-940, 1318, 4494-1318)
)

print(strata_data)
```

Now let me allocate the 100 sample blocks proportionate to occupied housing units:

```{r}
# Total number of sample blocks
total_sample_blocks <- 100

# Calculating total occupied housing units
total_occupied <- sum(strata_data$occupied_units)

# Calculating proportionate allocation
strata_data$proportion <- strata_data$occupied_units / total_occupied
strata_data$initial_allocation <- strata_data$proportion * total_sample_blocks
strata_data$fractional_part <- strata_data$initial_allocation - floor(strata_data$initial_allocation)
strata_data$rounded_allocation <- round(strata_data$initial_allocation)

# Checking if sum equals target
sum_allocations <- sum(strata_data$rounded_allocation)

if (sum_allocations != total_sample_blocks) {
  cat("Adjustments needed: Sum =", sum_allocations, "Target =", total_sample_blocks, "\n")
  
  # Adjusting based on fractional parts
  difference <- total_sample_blocks - sum_allocations
  
  if (difference > 0) {
    # Adding blocks to strata with largest fractional parts not rounded up
    order_candidates <- order(strata_data$fractional_part, decreasing = TRUE)
    for (i in seq_len(difference)) {
      strata_data$rounded_allocation[order_candidates[i]] <- 
        strata_data$rounded_allocation[order_candidates[i]] + 1
    }
  } else if (difference < 0) {
    # Removing blocks from strata with smallest fractional parts that were rounded up
    order_candidates <- order(strata_data$fractional_part)
    for (i in seq_len(abs(difference))) {
      strata_data$rounded_allocation[order_candidates[i]] <- 
        strata_data$rounded_allocation[order_candidates[i]] - 1
    }
  }
}
```

```{r}
print(strata_data[, c("stratum", "occupied_units", "proportion", 
                      "initial_allocation", "rounded_allocation")])
```

Now based on my calculations, I allocated the 100 sample blocks proportionately across the four strata using the number of occupied housing units in each stratum. 

Allegan River, with 8,521 occupied units, was allocated 6 blocks, while Allegan Non-River, which has 28,744 occupied units, received 22 blocks. Kalamazoo River, with 17,224 occupied units, was assigned 13 blocks, and Kalamazoo Non-River, the largest stratum with 77,299 occupied units, was allocated 59 blocks. 

These allocations were rounded from their initial fractional values to ensure the total number of blocks summed exactly to 100.

## b)  Give the overall sampling fraction f across the four strata.

Now the overall sampling fraction represents the proportion of housing units selected:

$$f = \frac{n}{N}$$

Where:

$n = 3,000$ is the total sample size (housing units)
$N = 131,788$ is the total number of occupied housing units

```{r}
# Total sample size
n <- 3000

# Calculate overall sampling fraction
f <- n / total_occupied

cat("Total occupied housing units (N):", total_occupied, "\n")
cat("Total sample size (n):", n, "\n")
cat("Overall sampling fraction (f):", f, "\n")
cat("As a percentage:", f * 100, "%\n")
```


$$f = \frac{3,000}{131,788} = 0.02277$$

The overall sampling fraction is approximately 0.02277 or about 2.28%, meaning we'll sample roughly 2.28% of all occupied housing units across the four strata.

## c) Maintaining epsem, what value of b* should be used in each of the four strata?

For a PPS design to maintain equal probability of selection (epsem), we need to determine the appropriate b* (minimum sufficient size) for each stratum.

The sampling fraction within each stratum should equal the overall sampling fraction:

$$\frac{b^*_h \times n_h}{N_h} = f$$

Solving for $b^*_h$:

$$b^*_h = \frac{f \times N_h}{n_h}$$

```{r}
# Calculating b* for each stratum
strata_data$b_star <- (f * strata_data$occupied_units) / strata_data$rounded_allocation

# Display results
print(strata_data[, c("stratum", "occupied_units", "rounded_allocation", "b_star")])
```

For each stratum:

$$b^*_1 = \frac{0.02277 \times 8,521}{6} = \frac{194.02}{6} \approx 32.34$$

$$b^*_2 = \frac{0.02277 \times 28,744}{22} = \frac{654.51}{22} \approx 29.75$$

$$b^*_3 = \frac{0.02277 \times 17,224}{13} = \frac{392.19}{13} \approx 30.17$$

$$b^*_4 = \frac{0.02277 \times 77,299}{59} = \frac{1,760.20}{59} \approx 29.83$$


After calculating the values of $b^*_h$ for each stratum, I found that Allegan River, with 8,521 occupied housing units and 6 allocated blocks, has a $b^*$ value of approximately 32.33. 

Allegan Non-River, which includes 28,744 occupied units and was allocated 22 blocks, has a $b^*$ value of about 29.74. For Kalamazoo River, with 17,224 occupied units and 13 blocks, the $b^*$ value came out to roughly 30.16. 

Lastly, Kalamazoo Non-River, the largest stratum with 77,299 occupied units and 59 blocks, has a $b^*$ value of around 29.82. These values represent the minimum sufficient size per block to maintain equal probability sampling across all strata.

## 2. Download the Excel file provided with this homework (a geographically sorted list of blocks). 

## a) Select a systematic PPeS sample of a = 20 blocks from the list of A = 4,495 in the csv file. The minimum sufficient size for a block is 50 occupied housing units. Specify the sampling interval, and the random start. List selected blocks, the selection number (the random start plus interval), and the total number of occupied housing units in the sample blocks. Document how the random start was determined, in a way that would allow someone to replicate your selection process exactly.

```{r}
# Load necessary libraries
library(readxl)

# Step 1: Load the dataset
file_path <- "SM-625-Homework-5-PPeS-Stratified-PPeS-frames-winter-2025.xlsx"
data <- read_excel(file_path, sheet = "PPeS frame")

# Step 2: Extract necessary columns
# Assuming "Cumulative Size" column contains cumulative occupied housing units
cumulative_size <- data$`Cumulative Size`
block_ids <- data$ID

# Step 3: Define parameters
n_blocks <- 20 # Number of blocks to select
total_size <- max(cumulative_size) # Total cumulative size
interval <- total_size / n_blocks # Sampling interval

# Random start between 1 and the interval
set.seed(1234) # For reproducibility
random_start <- runif(1, min = 1, max = interval)

# Step 4: Generate selection numbers
selection_numbers <- random_start + (0:(n_blocks - 1)) * interval

# Step 5: Identify selected blocks based on selection numbers
selected_blocks <- sapply(selection_numbers, function(x) {
  which(cumulative_size >= x)[1]
})

# Extract block IDs and occupied housing units for selected blocks
selected_block_ids <- block_ids[selected_blocks]
selected_occupied_units <- cumulative_size[selected_blocks]

# Step 6: Display results
results <- data.frame(
  Selection_Number = selection_numbers,
  Block_ID = selected_block_ids,
  Occupied_Units = selected_occupied_units
)

print(results)

```